// Code generated by "enumer -type YubicoPinPolicy -json -text -trimprefix PinPolicy"; DO NOT EDIT.

package types

import (
	"encoding/json"
	"fmt"
)

const _YubicoPinPolicyName = "NeverOncePerSessionAlways"

var _YubicoPinPolicyIndex = [...]uint8{0, 5, 19, 25}

func (i YubicoPinPolicy) String() string {
	i -= 1
	if i >= YubicoPinPolicy(len(_YubicoPinPolicyIndex)-1) {
		return fmt.Sprintf("YubicoPinPolicy(%d)", i+1)
	}
	return _YubicoPinPolicyName[_YubicoPinPolicyIndex[i]:_YubicoPinPolicyIndex[i+1]]
}

var _YubicoPinPolicyValues = []YubicoPinPolicy{1, 2, 3}

var _YubicoPinPolicyNameToValueMap = map[string]YubicoPinPolicy{
	_YubicoPinPolicyName[0:5]:   1,
	_YubicoPinPolicyName[5:19]:  2,
	_YubicoPinPolicyName[19:25]: 3,
}

// YubicoPinPolicyString retrieves an enum value from the enum constants string name.
// Throws an error if the param is not part of the enum.
func YubicoPinPolicyString(s string) (YubicoPinPolicy, error) {
	if val, ok := _YubicoPinPolicyNameToValueMap[s]; ok {
		return val, nil
	}
	return 0, fmt.Errorf("%s does not belong to YubicoPinPolicy values", s)
}

// YubicoPinPolicyValues returns all values of the enum
func YubicoPinPolicyValues() []YubicoPinPolicy {
	return _YubicoPinPolicyValues
}

// IsAYubicoPinPolicy returns "true" if the value is listed in the enum definition. "false" otherwise
func (i YubicoPinPolicy) IsAYubicoPinPolicy() bool {
	for _, v := range _YubicoPinPolicyValues {
		if i == v {
			return true
		}
	}
	return false
}

// MarshalJSON implements the json.Marshaler interface for YubicoPinPolicy
func (i YubicoPinPolicy) MarshalJSON() ([]byte, error) {
	return json.Marshal(i.String())
}

// UnmarshalJSON implements the json.Unmarshaler interface for YubicoPinPolicy
func (i *YubicoPinPolicy) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return fmt.Errorf("YubicoPinPolicy should be a string, got %s", data)
	}

	var err error
	*i, err = YubicoPinPolicyString(s)
	return err
}

// MarshalText implements the encoding.TextMarshaler interface for YubicoPinPolicy
func (i YubicoPinPolicy) MarshalText() ([]byte, error) {
	return []byte(i.String()), nil
}

// UnmarshalText implements the encoding.TextUnmarshaler interface for YubicoPinPolicy
func (i *YubicoPinPolicy) UnmarshalText(text []byte) error {
	var err error
	*i, err = YubicoPinPolicyString(string(text))
	return err
}
