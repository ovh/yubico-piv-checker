// Code generated by "enumer -type YubicoTouchPolicy -json -text -trimprefix TouchPolicy"; DO NOT EDIT.

package types

import (
	"encoding/json"
	"fmt"
)

const _YubicoTouchPolicyName = "NeverAlwaysCached15s"

var _YubicoTouchPolicyIndex = [...]uint8{0, 5, 11, 20}

func (i YubicoTouchPolicy) String() string {
	i -= 1
	if i >= YubicoTouchPolicy(len(_YubicoTouchPolicyIndex)-1) {
		return fmt.Sprintf("YubicoTouchPolicy(%d)", i+1)
	}
	return _YubicoTouchPolicyName[_YubicoTouchPolicyIndex[i]:_YubicoTouchPolicyIndex[i+1]]
}

var _YubicoTouchPolicyValues = []YubicoTouchPolicy{1, 2, 3}

var _YubicoTouchPolicyNameToValueMap = map[string]YubicoTouchPolicy{
	_YubicoTouchPolicyName[0:5]:   1,
	_YubicoTouchPolicyName[5:11]:  2,
	_YubicoTouchPolicyName[11:20]: 3,
}

// YubicoTouchPolicyString retrieves an enum value from the enum constants string name.
// Throws an error if the param is not part of the enum.
func YubicoTouchPolicyString(s string) (YubicoTouchPolicy, error) {
	if val, ok := _YubicoTouchPolicyNameToValueMap[s]; ok {
		return val, nil
	}
	return 0, fmt.Errorf("%s does not belong to YubicoTouchPolicy values", s)
}

// YubicoTouchPolicyValues returns all values of the enum
func YubicoTouchPolicyValues() []YubicoTouchPolicy {
	return _YubicoTouchPolicyValues
}

// IsAYubicoTouchPolicy returns "true" if the value is listed in the enum definition. "false" otherwise
func (i YubicoTouchPolicy) IsAYubicoTouchPolicy() bool {
	for _, v := range _YubicoTouchPolicyValues {
		if i == v {
			return true
		}
	}
	return false
}

// MarshalJSON implements the json.Marshaler interface for YubicoTouchPolicy
func (i YubicoTouchPolicy) MarshalJSON() ([]byte, error) {
	return json.Marshal(i.String())
}

// UnmarshalJSON implements the json.Unmarshaler interface for YubicoTouchPolicy
func (i *YubicoTouchPolicy) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return fmt.Errorf("YubicoTouchPolicy should be a string, got %s", data)
	}

	var err error
	*i, err = YubicoTouchPolicyString(s)
	return err
}

// MarshalText implements the encoding.TextMarshaler interface for YubicoTouchPolicy
func (i YubicoTouchPolicy) MarshalText() ([]byte, error) {
	return []byte(i.String()), nil
}

// UnmarshalText implements the encoding.TextUnmarshaler interface for YubicoTouchPolicy
func (i *YubicoTouchPolicy) UnmarshalText(text []byte) error {
	var err error
	*i, err = YubicoTouchPolicyString(string(text))
	return err
}
